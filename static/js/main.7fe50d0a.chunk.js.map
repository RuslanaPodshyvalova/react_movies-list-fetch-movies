{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getMovie","param","fetch","then","response","ok","json","Error","status","statusText","FindMovie","onAdd","moviePattern","useState","setTitle","setMovie","isMovieCard","setIsMovieCard","error","setError","searchMovie","a","movieFromServer","movieTitle","Title","Plot","Poster","imdbID","isMovieInList","some","curMovie","clearState","htmlFor","type","id","placeholder","value","onChange","event","target","setUpMovieTitle","classnames","help","hide","length","onClick","button","container","App","state","data","addMovie","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7fe50d0a.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const BASE_URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=6811da81&';\n\n// eslint-disable-next-line\nconst getData = (param) => {\n  return fetch(`${BASE_URL}${param}`)\n    .then((response) => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(`${response.status}: ${response.statusText}`);\n    })\n    .then((response) => {\n      const isError = response?.Error;\n\n      if (!isError) {\n        return response;\n      }\n\n      return null;\n    });\n};\n\nexport const getMovie = title => getData(`t=${title}`);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { getMovie } from '../../api/api';\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ movies, onAdd }) => {\n  const moviePattern = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState(moviePattern);\n  const [isMovieCard, setIsMovieCard] = useState(false);\n  const [error, setError] = useState('');\n\n  const searchMovie = async() => {\n    if (!title) {\n      return;\n    }\n\n    const movieFromServer = await getMovie(title);\n\n    if (movieFromServer !== null) {\n      setIsMovieCard(true);\n      setError('');\n\n      // eslint-disable-next-line\n      const { Title: movieTitle, Plot: description, Poster: imgUrl, imdbID: imdbId } = movieFromServer;\n\n      setMovie({\n        title: movieTitle,\n        description,\n        imgUrl,\n        imdbUrl: `https://www.imdb.com/title/${imdbId}`,\n        imdbId,\n      });\n    } else {\n      setError(`Can&apos;t find a movie with such a title`);\n    }\n  };\n\n  const setUpMovieTitle = (event) => {\n    if (title) {\n      clearState();\n    }\n\n    setTitle(event.target.value);\n  };\n\n  const addMovieToList = () => {\n    clearState();\n    if (isMovieInList()) {\n      setError(`can&apos;t add, this movie is on the list`);\n\n      return;\n    }\n\n    if (movie.title) {\n      onAdd(movie);\n    }\n  };\n\n  const isMovieInList = () => movies.some(curMovie => (\n    curMovie.imdbId === movie.imdbId\n  ));\n\n  const clearState = () => {\n    setTitle('');\n    setMovie(moviePattern);\n    setIsMovieCard(false);\n    setError('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={title}\n              onChange={event => setUpMovieTitle(event)}\n            />\n          </div>\n\n          <p className={classnames({\n            help: true,\n            's-danger': true,\n            hide: error.length === 0,\n          })}\n          >\n            {error}\n          </p>\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={searchMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className={classnames({\n                button: true,\n                'is-primary': true,\n                hide: !isMovieCard,\n              })}\n              onClick={addMovieToList}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className={classnames({\n        container: true,\n        hide: error.length > 0 || !isMovieCard,\n      })}\n      >\n        <h2 className=\"title\">Preview</h2>\n        <MovieCard {...movie} />\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [\n        ...state.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie movies={movies} onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}