{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getMovie","param","fetch","then","response","ok","Error","status","statusText","json","FindMovie","onAdd","useState","setTitle","setMovie","error","setError","searchMovie","a","movieFromServer","Response","movieTitle","Title","Plot","Poster","imdbID","isMovieInList","some","curMovie","clearState","htmlFor","type","id","placeholder","value","onChange","event","target","setUpMovieTitle","onClick","App","state","data","addMovie","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1a34bf0.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=6811da81&';\n\nconst getData = param => (fetch(`${BASE_URL}${param}`).then((response) => {\n  if (!response.ok) {\n    throw new Error(`${response.status}: ${response.statusText}`);\n  }\n\n  return response.json();\n}));\n\nexport const getMovie = title => getData(`t=${title}`);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\nimport { getMovie } from '../../api/api';\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ movies, onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState('');\n\n  const searchMovie = async() => {\n    if (!title) {\n      return;\n    }\n\n    const movieFromServer = await getMovie(title);\n\n    if (movieFromServer.Response !== 'False') {\n      setError('');\n\n      const {\n        Title: movieTitle,\n        Plot: description,\n        Poster: imgUrl,\n        imdbID: imdbId,\n      } = movieFromServer;\n\n      setMovie({\n        title: movieTitle,\n        description,\n        imgUrl,\n        imdbUrl: `https://www.imdb.com/title/${imdbId}`,\n        imdbId,\n      });\n    } else {\n      setError(`Can&apos;t find a movie with such a title`);\n    }\n  };\n\n  const setUpMovieTitle = (event) => {\n    if (title) {\n      clearState();\n    }\n\n    setTitle(event.target.value);\n  };\n\n  const addMovieToList = () => {\n    clearState();\n    if (isMovieInList()) {\n      setError(`can&apos;t add, this movie is on the list`);\n\n      return;\n    }\n\n    if (movie.title) {\n      onAdd(movie);\n    }\n  };\n\n  const isMovieInList = () => movies.some(curMovie => (\n    curMovie.imdbId === movie.imdbId\n  ));\n\n  const clearState = () => {\n    setTitle('');\n    setMovie(null);\n    setError('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={title}\n              onChange={event => setUpMovieTitle(event)}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help s-danger\">\n              {error}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={searchMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n          {movie && (\n            <div className=\"control\">\n              <button\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addMovieToList}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n      {(!error && movie) && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...movie} />\n        </div>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [\n        ...state.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie movies={movies} onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}